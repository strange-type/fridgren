---
import { type CollectionEntry, getCollection, render } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';

export async function getStaticPaths() {
    const pages = await getCollection('pages');
    return pages.map((page) => {
        return {
            params: { id: page.id },
            props: { page }
        };
    });
}

type Props = { page: CollectionEntry<'pages'> };

const { page } = Astro.props;
const { title, seo } = page.data;
const { Content } = await render(page);
---

<script>
    import { gsap } from 'gsap';

    // Trigger GSAP animations on page load
    const triggerAnimations = () => {
        gsap.from('.fade-up', {
            transform: 'translateX(10px)', // Initial position
            opacity: 0,
            duration: 1, // Smooth animation duration
            ease: 'power4.out', // Easing curve for smooth effect
            stagger: 0.15 // Staggered animation for multiple elements
        });
    };

    // Initialize animations
    const initializeAnimations = () => {
        gsap.killTweensOf('.fade-up'); // Clear any ongoing animations
        triggerAnimations(); // Start animations
    };

    // Trigger animations on initial page load
    window.addEventListener('load', initializeAnimations);

    // Trigger animations after Astro swaps content during navigation
    document.addEventListener('astro:after-swap', initializeAnimations);
</script>

<BaseLayout title={seo?.title ?? title} description={seo?.description} image={seo?.image} showHeader={false}>
    <article class="sm:max-w-2xl sm:mb-24">
        <header class="mb-8">
            <h1 class="text-4xl leading-tight sm:text-5xl sm:leading-tight fade-up">{title}</h1>
        </header>
        <div class="max-w-none prose sm:prose-lg fade-up">
            <Content />
        </div>
    </article>
</BaseLayout>
